var docs = {"jex.console":{"name":"jex.console","title":"console","parent":"jex","children":["jex.console.log","jex.console.error","jex.console.debug","jex.console.warn","jex.console.info","jex.console.buffer_","jex.console.add_to_buffer_","jex.console.flush_buffer_","jex.console.execute_"],"is_function":false,"is_constructor":false,"is_namespace":true,"is_prototype":false,"is_static":false,"parameters":[],"summary":"This is a wrapper for the native console class.","description":"This is a wrapper for the native console class. It provides access to basic\nconsole functions that you can call regardless of whether or not a console\nis available.\n\nAny console events triggered before the console is available (like when\nyou're trying to use Firebug Lite with IE7, for example) are buffered.\nBuffered console events are only output when another console event fires.\nSo, if you have 10 console events before your console is open, you will\nneed to fire off another event (potentially manually) to get the buffer to\nflush.\n\nIf the console exists but the function you tried to call isn't there (not\nall browsers define all of the functions made available here. IE8, for\nexample, doesn't support console.debug()),\n\nTested in Chrome 30\n\nIn IE11 and potentially other browsers, the console exists even when not\nopen but does not produce output. Therefore, the attempts from this class\nto buffer the output will fail and console events can be missed. This can\nbe mitigated simply by keeping the console open. The only real utility of\nthe buffer is for older browsers without consoles that take a while to get\nFirebug started up.","tags":{"example":["\/\/ You only need to call the constructor once; it just adds prototype\n \/\/ methods to this class. By including this class, you can do the following\n \/\/ or similar:\njex.console.log('Text');\njex.console.error('Error');"],"const":[""],"namespace":[""],"link":[{"name":"benalman.com","href":"http:\/\/benalman.com\/projects\/javascript-debug-console-log\/"},{"name":"developers.google.com","href":"https:\/\/developers.google.com\/chrome-developer-tools\/docs\/console-api"}]}},"jex.console.log":{"name":"jex.console.log","title":"log","parent":"jex.console","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":false,"is_static":true,"parameters":["message"],"summary":"Wrapper for native console.log().","description":"Wrapper for native console.log().","tags":{"param":[{"type":"string","name":"message","description":"The message to output to the console."}]}},"jex.console.error":{"name":"jex.console.error","title":"error","parent":"jex.console","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":false,"is_static":true,"parameters":["message"],"summary":"Wrapper for native console.error().","description":"Wrapper for native console.error().","tags":{"param":[{"type":"string","name":"message","description":"The message to output to the console."}]}},"jex.console.debug":{"name":"jex.console.debug","title":"debug","parent":"jex.console","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":false,"is_static":true,"parameters":["message"],"summary":"Wrapper for native console.debug().","description":"Wrapper for native console.debug().","tags":{"param":[{"type":"string","name":"message","description":"The message to output to the console."}]}},"jex.console.warn":{"name":"jex.console.warn","title":"warn","parent":"jex.console","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":false,"is_static":true,"parameters":["message"],"summary":"Wrapper for native console.warn().","description":"Wrapper for native console.warn().","tags":{"param":[{"type":"string","name":"message","description":"The message to output to the console."}]}},"jex.console.info":{"name":"jex.console.info","title":"info","parent":"jex.console","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":false,"is_static":true,"parameters":["message"],"summary":"Wrapper for native console.info().","description":"Wrapper for native console.info().","tags":{"param":[{"type":"string","name":"message","description":"The message to output to the console."}]}},"jex.console.buffer_":{"name":"jex.console.buffer_","title":"buffer_","parent":"jex.console","children":[],"is_function":false,"is_constructor":false,"is_namespace":false,"is_prototype":false,"is_static":true,"parameters":[],"summary":"A buffer of console events that need to be flushed to the console when it\nbecomes available.","description":"A buffer of console events that need to be flushed to the console when it\nbecomes available.","tags":{"private":[""],"type":["{Array.<{console_function: string, console_arguments: Arguments}>}"]}},"jex.console.add_to_buffer_":{"name":"jex.console.add_to_buffer_","title":"add_to_buffer_","parent":"jex.console","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":false,"is_static":true,"parameters":["console_function","console_arguments"],"summary":"Add a console function call to the buffer.","description":"Add a console function call to the buffer.","tags":{"private":[""],"param":[{"type":"string","name":"console_function","description":"The console function to buffer."},{"type":"Arguments","name":"console_arguments","description":"The arguments to pass to the function\ncall."}]}},"jex.console.flush_buffer_":{"name":"jex.console.flush_buffer_","title":"flush_buffer_","parent":"jex.console","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":false,"is_static":true,"parameters":[],"summary":"As long as window.console exists, flush the buffer to the console.","description":"As long as window.console exists, flush the buffer to the console. The\nexecute_() call handles all of the cross-browser quirks.","tags":{"private":[""]}},"jex.console.execute_":{"name":"jex.console.execute_","title":"execute_","parent":"jex.console","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":false,"is_static":true,"parameters":["console_function","console_arguments"],"summary":"First of all, IE sucks.","description":"First of all, IE sucks. Their console functions are of type 'object'\ninstead of 'function', so you can't call .apply on them. This is true for\nIE9 and below. That's what the type check is all about here. More info at\n\nNext up, this falls back to console.log when the function you called fails.\nFor example, IE 9 doesn't have console.debug so it will instead log so at\nleast something shows up in the console.","tags":{"private":[""],"param":[{"type":"string","name":"console_function","description":"The console function to execute."},{"type":"Object","name":"console_arguments","description":"The arguments to pass to the console\nfunction."}],"link":[{"name":"stackoverflow.com","href":"http:\/\/stackoverflow.com\/a\/6514267"}]}},"jex.debug":{"name":"jex.debug","title":"debug","parent":"jex","children":["jex.debug.listener"],"is_function":false,"is_constructor":false,"is_namespace":true,"is_prototype":false,"is_static":false,"parameters":[],"summary":"Debug namespace for JeX.","description":"Debug namespace for JeX. Debugging utilities go here. Console is exempt\nonly for brevity of those function calls.","tags":{"namespace":[""],"const":[""]}},"jex.debug.listener":{"name":"jex.debug.listener","title":"listener","parent":"jex.debug","children":["jex.debug.listener.render_count","jex.debug.listener.get_count"],"is_function":false,"is_constructor":false,"is_namespace":true,"is_prototype":false,"is_static":false,"parameters":[],"summary":"Debug utilities for event listeners.","description":"Debug utilities for event listeners.","tags":{"const":[""],"namespace":[""]}},"jex.debug.listener.render_count":{"name":"jex.debug.listener.render_count","title":"render_count","parent":"jex.debug.listener","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":false,"is_static":true,"parameters":[],"summary":"Render the event listener count in a div on the bottom right corner of the\nbody.","description":"Render the event listener count in a div on the bottom right corner of the\nbody. It stays updated automatically. Note that this can only be called\ninside a rocket.ready() callback or else after document.body exists.","tags":{"example":["\/\/ Call this to render the listener count on the page.\njex.debug.listener.render_count();"]}},"jex.debug.listener.get_count":{"name":"jex.debug.listener.get_count","title":"get_count","parent":"jex.debug.listener","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":false,"is_static":true,"parameters":[],"summary":"Count the current number of active event listeners.","description":"Count the current number of active event listeners. This loops over the\nrocket listener tree, so it's not super effecient, but still runs pretty\nquickly regardless.\n\nNote that this only counts listeners added using rocket.EventTarget. Native\nlisteners or inline listeners are not included here.","tags":{"return":[{"type":"number","description":"The number of currently active event listeners."}]}},"jex":{"name":"jex","title":"jex","parent":"","children":["jex.console","jex.debug","jex.table","jex.type","jex.version"],"is_function":false,"is_constructor":false,"is_namespace":true,"is_prototype":false,"is_static":false,"parameters":[],"summary":"","description":"Base namespace for JeX","tags":{"namespace":[""],"const":[""]}},"jex.table":{"name":"jex.table","title":"table","parent":"jex","children":["jex.table.prototype.render_tr_","jex.table.prototype.fill_row","jex.table.prototype.table","jex.table.prototype.tbody","jex.table.prototype.tr","jex.table.prototype.td"],"is_function":true,"is_constructor":true,"is_namespace":false,"is_prototype":false,"is_static":false,"parameters":["options"],"summary":"Creates a table with the chosen number of rows and columns.","description":"Creates a table with the chosen number of rows and columns. Makes it easy\nand fast to create a table and offers a few functions for easily accessing\nelements inside the table.","tags":{"param":[{"type":"{rows: number, columns: number, header: boolean}","name":"options","description":"rows: How many rows are in the table. Default 1.<br\/>\ncolumns: How many columns are in the table. Default 1.<br\/>\nheader: Whether or not a thead is placed on the table. A thead counts as\none of your rows. Default false."}],"example":["\/\/ Create a table with one row and one column.\nvar table = new jex.table();","\/\/ Create a table with four rows and one column\nvar table = new jex.table({'rows': 4});","\/\/ Create a table with four columns and one row.\nvar table = new jex.table({'columns': 4});","\/\/ Create a table with four rows and two columns.\nvar table = new jex.table({'rows': 4, 'columns': 2});","\/\/ Create a table with four rows and two columns with the top row in a thead.\nvar table = new jex.table({'rows': 4, 'columns': 2, 'header': true});"],"constructor":[""]}},"jex.table.prototype.render_tr_":{"name":"jex.table.prototype.render_tr_","title":"render_tr_","parent":"jex.table","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":true,"is_static":false,"parameters":["columns","cell_type"],"summary":"Renders a tr with a specific number of columns.","description":"Renders a tr with a specific number of columns.","tags":{"private":[""],"param":[{"type":"number","name":"columns","description":"The number of columns."},{"type":"string","name":"cell_type","description":""}],"return":[{"type":"rocket.Elements","description":""}]}},"jex.table.prototype.fill_row":{"name":"jex.table.prototype.fill_row","title":"fill_row","parent":"jex.table","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":true,"is_static":false,"parameters":["row","data"],"summary":"Fills a row in the table with the given data.","description":"Fills a row in the table with the given data.","tags":{"param":[{"type":"number","name":"row","description":"The index of the row to fill in."},{"type":"Array.<string>","name":"data","description":"The data to put in the row."}]}},"jex.table.prototype.table":{"name":"jex.table.prototype.table","title":"table","parent":"jex.table","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":true,"is_static":false,"parameters":[],"summary":"Get the actual table element from this instance of the jex.table class.","description":"Get the actual table element from this instance of the jex.table class.","tags":{"return":[{"type":"rocket.Elements","description":"The actual table element."}]}},"jex.table.prototype.tbody":{"name":"jex.table.prototype.tbody","title":"tbody","parent":"jex.table","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":true,"is_static":false,"parameters":[],"summary":"Get the actual tbody element from this instance of the jex.table class.","description":"Get the actual tbody element from this instance of the jex.table class.","tags":{"return":[{"type":"rocket.Elements","description":"The actual tbody element."}]}},"jex.table.prototype.tr":{"name":"jex.table.prototype.tr","title":"tr","parent":"jex.table","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":true,"is_static":false,"parameters":["row"],"summary":"Get the actual tr element at the specified index.","description":"Get the actual tr element at the specified index.","tags":{"param":[{"type":"number","name":"row","description":"The index of the row to fetch. Includes the header row."}],"return":[{"type":"rocket.Elements","description":"The actual tr element."}]}},"jex.table.prototype.td":{"name":"jex.table.prototype.td","title":"td","parent":"jex.table","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":true,"is_static":false,"parameters":["row","column"],"summary":"Get the actual td element at the specified row\/column index.","description":"Get the actual td element at the specified row\/column index.","tags":{"param":[{"type":"number","name":"row","description":"The index of the row the td is located in. Includes the\nheader row."},{"type":"number","name":"column","description":"The index of the column the td is located in."}],"return":[{"type":"rocket.Elements","description":"The actual td element."}]}},"jex.type":{"name":"jex.type","title":"type","parent":"jex","children":[],"is_function":true,"is_constructor":false,"is_namespace":false,"is_prototype":false,"is_static":true,"parameters":["object"],"summary":"Returns the type of the provided object.","description":"Returns the type of the provided object. It's pretty good but isn't\nconsistent cross-browser for odd things like window and doesn't support\ncustom types. It is, however, good for at least the following types, which\nis what this function was designed for: null, undefined, boolean, number,\nstring, date, regexp, object, array, function, nan.\n\nTested in Chrome 30, IE7, IE8, IE9, IE11","tags":{"link":[{"name":"javascriptweblog.wordpress.com","href":"http:\/\/javascriptweblog.wordpress.com\/2011\/08\/08\/fixing-the-javascript-typeof-operator\/"}],"param":[{"type":"Object","name":"object","description":"The object to get the type for."}],"return":[{"type":"string","description":"The actual type of the object."}]}},"jex.version":{"name":"jex.version","title":"version","parent":"jex","children":[],"is_function":false,"is_constructor":false,"is_namespace":false,"is_prototype":false,"is_static":true,"parameters":[],"summary":"Version number for this release.","description":"Version number for this release.","tags":{"const":[""]}}}